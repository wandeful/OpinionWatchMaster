<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xnyesf.opinion.mapper.OpinionDataMapper">
  <resultMap id="BaseResultMap" type="com.xnyesf.opinion.entity.OpinionDataDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="ext_data" jdbcType="VARCHAR" property="extData" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xnyesf.opinion.entity.OpinionDataDO">
    <result column="key_word_list" jdbcType="LONGVARCHAR" property="keyWordList" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_modified, uuid, source, like_count, comment_count, ext_data
  </sql>
  <sql id="Blob_Column_List">
    key_word_list, content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xnyesf.opinion.entity.OpinionDataExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from opinion_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xnyesf.opinion.entity.OpinionDataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from opinion_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from opinion_data
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from opinion_data
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xnyesf.opinion.entity.OpinionDataExample">
    delete from opinion_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xnyesf.opinion.entity.OpinionDataDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into opinion_data (gmt_create, gmt_modified, uuid, 
      source, like_count, comment_count, 
      ext_data, key_word_list, content
      )
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{uuid,jdbcType=VARCHAR}, 
      #{source,jdbcType=VARCHAR}, #{likeCount,jdbcType=INTEGER}, #{commentCount,jdbcType=INTEGER}, 
      #{extData,jdbcType=VARCHAR}, #{keyWordList,jdbcType=LONGVARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xnyesf.opinion.entity.OpinionDataDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into opinion_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="extData != null">
        ext_data,
      </if>
      <if test="keyWordList != null">
        key_word_list,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="extData != null">
        #{extData,jdbcType=VARCHAR},
      </if>
      <if test="keyWordList != null">
        #{keyWordList,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xnyesf.opinion.entity.OpinionDataExample" resultType="java.lang.Long">
    select count(*) from opinion_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update opinion_data
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.gmtCreate != null">
        gmt_create = #{row.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="row.gmtModified != null">
        gmt_modified = #{row.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="row.uuid != null">
        uuid = #{row.uuid,jdbcType=VARCHAR},
      </if>
      <if test="row.source != null">
        source = #{row.source,jdbcType=VARCHAR},
      </if>
      <if test="row.likeCount != null">
        like_count = #{row.likeCount,jdbcType=INTEGER},
      </if>
      <if test="row.commentCount != null">
        comment_count = #{row.commentCount,jdbcType=INTEGER},
      </if>
      <if test="row.extData != null">
        ext_data = #{row.extData,jdbcType=VARCHAR},
      </if>
      <if test="row.keyWordList != null">
        key_word_list = #{row.keyWordList,jdbcType=LONGVARCHAR},
      </if>
      <if test="row.content != null">
        content = #{row.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update opinion_data
    set id = #{row.id,jdbcType=BIGINT},
      gmt_create = #{row.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{row.gmtModified,jdbcType=TIMESTAMP},
      uuid = #{row.uuid,jdbcType=VARCHAR},
      source = #{row.source,jdbcType=VARCHAR},
      like_count = #{row.likeCount,jdbcType=INTEGER},
      comment_count = #{row.commentCount,jdbcType=INTEGER},
      ext_data = #{row.extData,jdbcType=VARCHAR},
      key_word_list = #{row.keyWordList,jdbcType=LONGVARCHAR},
      content = #{row.content,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update opinion_data
    set id = #{row.id,jdbcType=BIGINT},
      gmt_create = #{row.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{row.gmtModified,jdbcType=TIMESTAMP},
      uuid = #{row.uuid,jdbcType=VARCHAR},
      source = #{row.source,jdbcType=VARCHAR},
      like_count = #{row.likeCount,jdbcType=INTEGER},
      comment_count = #{row.commentCount,jdbcType=INTEGER},
      ext_data = #{row.extData,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xnyesf.opinion.entity.OpinionDataDO">
    update opinion_data
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="extData != null">
        ext_data = #{extData,jdbcType=VARCHAR},
      </if>
      <if test="keyWordList != null">
        key_word_list = #{keyWordList,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xnyesf.opinion.entity.OpinionDataDO">
    update opinion_data
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      uuid = #{uuid,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      like_count = #{likeCount,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      ext_data = #{extData,jdbcType=VARCHAR},
      key_word_list = #{keyWordList,jdbcType=LONGVARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xnyesf.opinion.entity.OpinionDataDO">
    update opinion_data
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      uuid = #{uuid,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      like_count = #{likeCount,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      ext_data = #{extData,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>